{"remainingRequest":"/Users/jennadorsey/Desktop/nextlevel/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jennadorsey/Desktop/nextlevel/src/views/EventCreate.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jennadorsey/Desktop/nextlevel/src/views/EventCreate.vue","mtime":1569801475880},{"path":"/Users/jennadorsey/Desktop/nextlevel/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jennadorsey/Desktop/nextlevel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jennadorsey/Desktop/nextlevel/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jennadorsey/Desktop/nextlevel/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Datepicker from 'vuejs-datepicker'\nimport { required } from 'vuelidate/lib/validators'\nimport NProgress from 'nprogress'\nexport default {\n  components: {\n    Datepicker\n  },\n  data() {\n    const times = []\n    for (let i = 1; i <= 24; i++) {\n      times.push(i + ':00')\n    }\n    return {\n      times,\n      categories: this.$store.state.categories,\n      event: this.createFreshEventObject()\n    }\n  },\n  validations: {\n    event: {\n      category: { required },\n      title: { required },\n      description: { required },\n      location: { required },\n      date: { required },\n      time: { required }\n    }\n  },\n  methods: {\n    createEvent() {\n      this.$v.$touch()\n      if (!this.$v.$invalid) {\n        NProgress.start()\n        this.$store\n          .dispatch('event/createEvent', this.event)\n          .then(() => {\n            this.$router.push({\n              name: 'event-show',\n              params: { id: this.event.id }\n            })\n            this.event = this.createFreshEventObject()\n          })\n          .catch(() => {\n            NProgress.done()\n          })\n      }\n    },\n    createFreshEventObject() {\n      const user = this.$store.state.user.user\n      const id = Math.floor(Math.random() * 10000000)\n      return {\n        id: id,\n        user: user,\n        category: '',\n        organizer: user,\n        title: '',\n        description: '',\n        location: '',\n        date: '',\n        time: '',\n        attendees: []\n      }\n    }\n  }\n}\n",{"version":3,"sources":["EventCreate.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"EventCreate.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <h1>Create an Event</h1>\n    <form @submit.prevent=\"createEvent\">\n      <!-- <p class=\"-text-error\" v-if=\"$v.$anyError\">Please fill-out required fields.</p> -->\n      <BaseSelect\n        class=\"field\"\n        :class=\"{ 'error': $v.event.category.$error }\"\n        label=\"Select a category\"\n        :options=\"categories\"\n        v-model=\"event.category\"\n        @blur=\"$v.event.category.$touch()\"\n      />\n      <template v-if=\"$v.event.category.$error\">\n        <p v-if=\"!$v.event.category.required\" class=\"-text-error\">Category is required.</p>\n      </template>\n\n      <h3>Name & describe your event</h3>\n\n      <BaseInput\n        class=\"field\"\n        :class=\"{ 'error': $v.event.title.$error }\"\n        label=\"Title\"\n        type=\"text\"\n        placeholder=\"Add an event title\"\n        v-model=\"event.title\"\n        @blur=\"$v.event.title.$touch()\"\n      />\n      <template v-if=\"$v.event.title.$error\">\n        <p v-if=\"!$v.event.title.required\" class=\"-text-error\">Title is required.</p>\n      </template>\n\n      <BaseInput\n        class=\"field\"\n        :class=\"{ 'error': $v.event.description.$error }\"\n        label=\"Description\"\n        type=\"text\"\n        placeholder=\"Add a description\"\n        v-model=\"event.description\"\n        @blur=\"$v.event.description.$touch()\"\n      />\n      <template v-if=\"$v.event.description.$error\">\n        <p v-if=\"!$v.event.description.required\" class=\"-text-error\">Description is required.</p>\n      </template>\n\n      <BaseInput\n        class=\"field\"\n        :class=\"{ 'error': $v.event.location.$error }\"\n        label=\"Location\"\n        type=\"text\"\n        placeholder=\"Add a location\"\n        v-model=\"event.location\"\n        @blur=\"$v.event.location.$touch()\"\n      />\n      <template v-if=\"$v.event.location.$error\">\n        <p v-if=\"!$v.event.location.required\" class=\"-text-error\">Location is required.</p>\n      </template>\n\n      <h3>When is your event?</h3>\n\n      <div class=\"field\">\n        <label>Date</label>\n        <datepicker\n          v-model=\"event.date\"\n          placeholder=\"Select a date\"\n          :input-class=\"{ 'error': $v.event.date.$error }\"\n          @opened=\"$v.event.date.$touch()\"\n        />\n      </div>\n      <template v-if=\"$v.event.date.$error\">\n        <p v-if=\"!$v.event.date.required\" class=\"-text-error\">Date is required.</p>\n      </template>\n\n      <BaseSelect\n        class=\"field\"\n        :class=\"{ 'error': $v.event.date.$error}\"\n        label=\"Select a time\"\n        :options=\"times\"\n        v-model=\"event.time\"\n        @blur=\"$v.event.time.$touch()\"\n      />\n      <template v-if=\"$v.event.time.$error\">\n        <p v-if=\"!$v.event.time.required\" class=\"-text-error\">Category is required.</p>\n      </template>\n\n      <BaseButton type=\"submit\" buttonClass=\"-fill-gradient\" :disabled=\"$v.$invalid\">Submit</BaseButton>\n    </form>\n  </div>\n</template>\n\n\n<script>\nimport Datepicker from 'vuejs-datepicker'\nimport { required } from 'vuelidate/lib/validators'\nimport NProgress from 'nprogress'\nexport default {\n  components: {\n    Datepicker\n  },\n  data() {\n    const times = []\n    for (let i = 1; i <= 24; i++) {\n      times.push(i + ':00')\n    }\n    return {\n      times,\n      categories: this.$store.state.categories,\n      event: this.createFreshEventObject()\n    }\n  },\n  validations: {\n    event: {\n      category: { required },\n      title: { required },\n      description: { required },\n      location: { required },\n      date: { required },\n      time: { required }\n    }\n  },\n  methods: {\n    createEvent() {\n      this.$v.$touch()\n      if (!this.$v.$invalid) {\n        NProgress.start()\n        this.$store\n          .dispatch('event/createEvent', this.event)\n          .then(() => {\n            this.$router.push({\n              name: 'event-show',\n              params: { id: this.event.id }\n            })\n            this.event = this.createFreshEventObject()\n          })\n          .catch(() => {\n            NProgress.done()\n          })\n      }\n    },\n    createFreshEventObject() {\n      const user = this.$store.state.user.user\n      const id = Math.floor(Math.random() * 10000000)\n      return {\n        id: id,\n        user: user,\n        category: '',\n        organizer: user,\n        title: '',\n        description: '',\n        location: '',\n        date: '',\n        time: '',\n        attendees: []\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.field {\n  margin-bottom: 24px;\n}\n</style>\n"]}]}